service: fotopia-web-app

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-s3-local
  - serverless-offline
  - serverless-webpack

custom:
  webpackIncludeModules: true
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
  s3:
    host: 0.0.0.0
    port: 5000
    directory: /tmp/s3bucket
    cors: false

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    S3_BUCKET: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: fotos/create.createItem
    events:
      - http:
          path: create
          method: post
          cors: true

  query:
    handler: fotos/query.queryItems
    events:
      - http:
          path: query
          method: post
          cors: true

  get:
    handler: fotos/get.getItem
    events:
      - http:
          path: foto/{id}
          method: get
          cors: true

  update:
    handler: fotos/update.updateItem
    events:
      - http:
          path: foto/{id}
          method: put
          cors: true

  delete:
    handler: fotos/delete.deleteItem
    events:
      - http:
          path: foto/{id}
          method: delete
          cors: true

resources:
  Resources:
    FotopiaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: userid
            AttributeType: S
          - AttributeName: birthtime
            AttributeType: N
        KeySchema:
          - AttributeName: userid
            KeyType: HASH
          - AttributeName: birthtime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    FotopiaBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        AccessControl: PublicRead
